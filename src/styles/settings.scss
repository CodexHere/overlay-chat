#container.settings {
  display: flex;
  flex-direction: column;
  padding: 1rem 1rem 0.125rem 1rem;
  height: 100%;

  header {
    display: flex;

    .container-title {
      flex: 1;
      margin-bottom: 1rem;
      text-shadow:
        0px 0px 3px rgb(255 255 255),
        0px 0px 4px rgb(0 0 0),
        0px 0px 18px var(--base-background),
        0px 0px 5px var(--base-background);
    }

    #plugin-jumper {
      width: auto;
    }
  }

  [data-input-type] {
    display: flex;
    flex-direction: column;
    min-width: 12em;

    & + [data-input-type='arraygroup'] {
      margin-top: var(--spacing);
    }
  }

  [data-input-type='password'] {
    .password-wrapper {
      display: flex;
      position: relative;

      input {
        flex: 1;
        padding-right: 2.4em;
      }

      button {
        width: auto;
        background-color: transparent;
        border: none;
        right: 0.4rem;
        display: inline-block;
        position: absolute;
      }
    }
  }

  [data-input-type='range'] {
    .range-wrapper {
      display: flex;
      gap: 1rem;
      align-items: center;

      input {
        margin: 0;

        &[type='number'] {
          width: auto;
          max-width: 6rem;
        }
      }
    }
  }

  [data-input-type='radio-option'],
  [data-input-type='switch'],
  [data-input-type='checkbox'] {
    flex-direction: row-reverse;
    justify-content: flex-end;
    align-items: center;

    &:not(:last-child) {
      margin-bottom: calc(var(--spacing) * 0.25);
    }

    input {
      margin-block: 0;
    }

    label {
      margin-bottom: 0;
    }
  }

  [data-input-type='switch-multiple'],
  [data-input-type='checkbox-multiple'],
  [data-input-type='radio'] {
    .input-group {
      padding: 0.5em;
      border: 1px solid var(--card-border-color);
      background: var(--card-background-color);
      border-radius: var(--border-radius);

      &:not(:last-child) {
        margin-bottom: var(--spacing);
      }
    }
  }

  [data-input-type='arraygroup'],
  [data-input-type='arraylist'] {
    .description {
      margin: 0.5em;
    }

    .content {
      display: flex;
      flex-direction: column;

      .input-group label {
        display: inline-block;
      }

      .arraylist-controls {
        display: flex;
        width: 8rem;
        gap: 1rem;
        margin-left: auto;
        margin-right: 1rem;
      }
    }

    input,
    select,
    button,
    .input-group {
      margin-bottom: 0;
    }
  }

  [data-col-type='hidden'] {
    display: none;
  }

  // For ArrayGroup/Lists, we want to hide labels to avoid redundant labeling in a Table
  // However, in these we may have switch/checkboxes which we *DO* need the labels for.
  form#settings {
    [data-input-type='arraygroup'],
    [data-input-type='arraylist'] {
      td > [data-input-type] {
        &:not([data-input-type='switch']):not([data-input-type='checkbox']) {
          & > label {
            display: none;
          }
        }
      }
    }
  }

  .description {
    border: 1px solid var(--card-border-color);
    padding: calc(var(--spacing) / 2);
    margin: 0;
    margin-bottom: var(--spacing);
    font-size: 0.8em;
    background-color: var(--description-background-color);
  }

  .table-wrapper {
    max-width: 100%;
    overflow: auto;
    margin-bottom: var(--spacing);

    table {
      margin-bottom: 0;
    }
  }

  .content {
    position: relative;

    padding: var(--spacing);
    border: 1px solid var(--card-border-color);
    border-top: 0;
    background: var(--card-background-color);
  }

  [title]:after {
    --size: 0.75rem;
    display: inline-flex;
    content: 'i';
    background: var(--primary);
    border-radius: 50%;
    border: 1px solid #fff;
    font-size: var(--size);
    width: var(--size);
    height: var(--size);
    justify-content: center;
    align-items: center;
    position: relative;
    top: -0.55em;
    left: 0.25em;
    opacity: 0.5;
    cursor: help;
  }

  form#settings {
    display: flex;
    flex-direction: column;
    flex: 1;
    overflow-y: auto;
    margin-bottom: 1rem;
    background: var(--card-background-color);
    border: 1px solid var(--card-border-color);
    border-top-left-radius: var(--border-radius);
    border-bottom-left-radius: var(--border-radius);
    padding: 1rem;

    input:not([type='submit'], [type='button'], [type='reset'], [type='range'], [type='file'], [readonly]):focus,
    select:focus,
    textarea:focus {
      --box-shadow: 0 0 var(--outline-width) var(--outline-width) var(--form-element-focus-color);
    }

    input:invalid,
    input:focus:invalid {
      --border-color: var(--form-element-invalid-focus-color);
      --background-color: #f4bc1e55;
      border-width: 2px;
      outline: none;
      background-position: center right 0.75rem;
      background-image: var(--icon-invalid);
    }

    input:focus:invalid {
      --border-color: var(--form-element-invalid-border-color);
      --box-shadow: 0 0 var(--outline-width) var(--outline-width) var(--form-element-invalid-border-color);
    }

    label {
      display: inline-block;
    }

    // Plugin Metadata
    & > details:not(:first-child) .content > details:last-child {
      margin: 0;
      font-size: 0.7em;

      [data-input-type] {
        flex-direction: row;
      }

      input:not([type='checkbox'], [type='radio']),
      select,
      textarea {
        width: auto;
        font-size: 1em;
      }

      .label-wrapper {
        padding-left: 0;
      }

      label {
        min-width: 10rem;
        margin: 0;
      }

      input {
        background: none;
        border: none;
        height: auto;
        padding: 0;
        margin: 0;
      }
    }
  }

  form#settings-options {
    margin: 0;

    .link-results {
      display: flex;
      gap: 1rem;
      position: relative;

      textarea {
        height: 100%;
        resize: none;
        margin: 0;
      }

      .load-options {
        display: flex;
        flex-direction: column;

        .button-load-app {
          margin-bottom: calc(var(--spacing) * 0.25);
        }

        .button-settings-reset {
          margin-top: var(--spacing);
          margin-bottom: 0;
        }
      }

      button {
        width: auto;
        flex: 1;
      }

      .textarea-wrapper {
        position: relative;
        flex: 1;
        margin: 0;

        &:after {
          --inset: 0.2em;
          content: attr(data-char-count);
          display: block;
          position: absolute;
          top: var(--inset);
          right: var(--inset);
          font-size: 0.75em;
          line-height: 0.75em;
        }
      }
    }

    .settings-options {
      --font-size: 0.85em;
      font-size: var(--font-size);

      &:has(*) {
        padding: calc(var(--spacing) / 2);
        margin-bottom: 0;
      }

      input,
      select {
        width: auto;
        min-width: 8em;
        margin: 0;
        font-size: inherit;
        padding: 0.25em;

        &:not(:last-child) {
          margin-right: calc(var(--spacing) * 2);
        }
      }

      label {
        display: inline-block;
        margin-right: calc(var(--spacing) / 3);
      }
    }
  }

  footer.version {
    display: flex;
    flex-direction: row-reverse;
  }
}
