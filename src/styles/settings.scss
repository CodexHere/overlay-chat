@import './focus-mode';

#container.settings {
  --link-results-reveal-duration: 0.5s;

  display: flex;
  flex-direction: column;
  padding: 1rem 1rem 0.25rem 1rem;
  height: 100%;

  header {
    display: flex;

    .container-title {
      flex: 1;
      margin-bottom: 1rem;
      text-shadow:
        0px 0px 3px rgb(255 255 255),
        0px 0px 4px rgb(0 0 0),
        0px 0px 18px var(--base-background),
        0px 0px 5px var(--base-background);
    }

    #plugin-jumper {
      width: auto;
    }
  }

  label {
    display: inline-block;
  }

  [data-input-type] {
    display: flex;
    flex-direction: column;
    min-width: 12em;

    & + [data-input-type='grouparray'] {
      margin-top: var(--pico-spacing);
    }
  }

  [data-input-type='password'] {
    .password-wrapper {
      display: flex;
      position: relative;

      input {
        flex: 1;
        padding-right: 2.4em;
      }

      button {
        display: inline-block;
        position: absolute;
        width: auto;
        background-color: transparent;
        border: none;
        right: 0.4rem;
      }
    }
  }

  [data-input-type='range'] {
    .range-wrapper {
      display: flex;
      gap: 1rem;
      align-items: center;

      input {
        margin: 0;

        &[type='number'] {
          width: auto;
          max-width: 6rem;
        }
      }
    }
  }

  [data-input-type='radio-option'],
  [data-input-type='switch'],
  [data-input-type='checkbox'] {
    flex-direction: row-reverse;
    justify-content: flex-end;
    align-items: center;

    &:not(:last-child) {
      margin-bottom: calc(var(--pico-spacing) * 0.25);
    }

    input {
      margin-block: 0;
    }

    label {
      margin-bottom: 0;
    }
  }

  [data-input-type='switch-multiple'],
  [data-input-type='checkbox-multiple'],
  [data-input-type='radio'] {
    .input-group {
      padding: 0.5em;
      border: 1px solid var(--pico-card-border-color);
      background: var(--pico-card-background-color);
      border-radius: var(--pico-border-radius);

      &:not(:last-child) {
        margin-bottom: var(--pico-spacing);
      }
    }
  }

  [data-input-type='grouparray'],
  [data-input-type='grouplist'] {
    .description {
      margin: 0.5em;
    }

    .content {
      display: flex;
      flex-direction: column;

      .input-group label {
        display: inline-block;
      }

      .arraylist-controls {
        display: flex;
        width: 8rem;
        gap: 1rem;
        margin-left: auto;
        margin-right: 1rem;

        button {
          width: 100%;
        }
      }
    }

    input,
    select,
    button,
    .input-group {
      margin-bottom: 0;
    }

    td,
    th {
      background-color: transparent;

      button {
        width: 100%;
      }
    }

    // For ArrayGroup/Lists, we want to hide labels to avoid redundant labeling in a Table
    // However, in these we may have switch/checkboxes which we *DO* need the labels for.
    td > [data-input-type] {
      &:not([data-input-type='switch']):not([data-input-type='checkbox']) {
        & > label {
          display: none;
        }
      }
    }
  }

  [data-col-type='hidden'] {
    display: none;
  }

  .description {
    border: 1px solid var(--pico-card-border-color);
    padding: calc(var(--pico-spacing) / 2);
    margin: 0;
    margin-bottom: var(--pico-spacing);
    font-size: 0.8em;
    background-color: var(--description-background-color);
  }

  .table-wrapper {
    max-width: 100%;
    overflow: auto;
    margin-bottom: var(--pico-spacing);

    &:last-child {
      margin-bottom: 0;
    }

    table {
      margin-bottom: 0;

      tr:last-child td {
        border: none;
      }
    }
  }

  .content {
    position: relative;

    padding: var(--pico-spacing);
    border: 1px solid var(--pico-card-border-color);
    border-top: 0;
    background: var(--pico-card-background-color);
  }

  // Tooltip Icon, if applied to an Element
  [title],
  [title]:after {
    cursor: help;
  }

  [title]:after {
    --_size: 0.75rem;
    display: inline-flex;
    content: 'i';
    background: var(--pico-primary);
    border-radius: 50%;
    border: 1px solid #fff;
    font-size: var(--_size);
    width: var(--_size);
    height: var(--_size);
    justify-content: center;
    align-items: center;
    position: relative;
    top: -0.55em;
    left: 0.25em;
    opacity: 0.5;
  }

  form#settings {
    display: flex;
    flex-direction: column;
    flex: 1;
    overflow-y: auto;
    margin-bottom: 1rem;
    background: var(--pico-card-background-color);
    border: 1px solid var(--pico-card-border-color);
    border-top-left-radius: var(--pico-border-radius);
    border-bottom-left-radius: var(--pico-border-radius);
    padding: 1rem;

    input:not([type='submit'], [type='button'], [type='reset'], [type='range'], [type='file'], [readonly]):focus,
    select:focus,
    textarea:focus {
      --pico-box-shadow: 0 0 var(--outline-width) var(--outline-width) var(--pico-form-element-focus-color);
      --pico-border-color: var(--pico-form-element-invalid-border-color);
    }

    input:invalid,
    input:focus:invalid {
      --pico-switch-background-color: var(--base-element-invalid-color);
      --pico-color: var(--base-element-invalid-color);
      --pico-form-element-background-color: var(--base-element-invalid-color);
      --pico-form-element-border-color: var(--pico-form-element-invalid-focus-color);
      --pico-form-element-active-background-color: var(--pico-form-element-invalid-focus-color);
      border-width: 2px;
      outline: none;
      background-position: center right 0.75rem;
      background-image: var(--pico-icon-invalid);
    }

    input:focus:invalid {
      --pico-form-element-border-color: var(--pico-form-element-invalid-border-color);
      --pico-box-shadow: 0 0 var(--outline-width) var(--outline-width) var(--pico-form-element-invalid-border-color);
    }

    // Plugin Metadata
    & > details:not(:first-child) > .content > details:last-child {
      margin: 0;
      font-size: 0.7em;

      [data-input-type] {
        flex-direction: row;
      }

      input:not([type='checkbox'], [type='radio']),
      select,
      textarea {
        width: 100%;
        font-size: 1em;
      }

      .label-wrapper {
        padding-left: 0;
      }

      label {
        min-width: 10rem;
        margin: 0;
      }

      input {
        background: none;
        border: none;
        height: auto;
        padding: 0;
        margin: 0;
      }
    }
  }

  form#configuration-options {
    display: flex;
    gap: 1em;
    margin: 0;

    textarea.url {
      position: relative;
      height: 100%;
      resize: none;
      margin: 0;
    }

    .left-column {
      flex: 1;
    }

    .textarea-wrapper {
      position: relative;
      flex: 1;
      margin: 0;

      textarea {
        filter: blur(0.175rem);
        transition: filter var(--link-results-reveal-duration);
      }

      .results-reveal {
        position: absolute;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;

        font-size: 2em;

        background-color: var(--pico-card-background-color);
        opacity: 1;
        transition: opacity var(--link-results-reveal-duration);

        inset-block: 0;
        inset-inline: 0;

        h2,
        h5 {
          margin: 0;
        }
      }

      &:before {
        --inset: 0.2em;
        content: attr(data-char-count);
        display: block;
        position: absolute;
        top: var(--inset);
        right: var(--inset);
        font-size: 0.75em;
        line-height: 0.75em;
      }

      &.reveal {
        textarea {
          filter: blur(0);
        }

        .results-reveal {
          opacity: 0;
        }
      }
    }

    .configuration-options {
      --pico-font-size: 0.85em;
      font-size: var(--pico-font-size);
      display: flex;

      &:has(*) {
        padding: calc(var(--pico-spacing) / 2);
        margin-bottom: 0;
      }

      input,
      select {
        width: auto;
        margin: 0;
        font-size: inherit;
        padding: 0.25em;

        &:not(:last-child) {
          margin-right: calc(var(--pico-spacing) * 2);
        }
      }

      input[type='checkbox'] {
        width: 1.25em;
        height: 1.25em;
      }

      select {
        min-width: 8em;
      }

      button {
        width: auto;
        margin: 0;
      }

      label {
        display: inline-block;
        margin-bottom: 0;
      }

      .spacer {
        flex: 1;
      }
    }

    .options-load-app {
      display: flex;
      flex-direction: column;

      .button-load-app {
        margin-bottom: calc(var(--pico-spacing) * 0.25);
      }

      .button-settings-reset {
        margin-top: var(--pico-spacing);
        margin-bottom: 0;
      }
    }
  }

  footer.version {
    display: flex;
    flex-direction: row-reverse;
  }
}
